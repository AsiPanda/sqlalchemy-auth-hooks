"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict, Generator, List

NATIVE_TYPES = ...
class QueryResult:
    """Response type of a call to the `query` API"""
    def __init__(self, results: List[Any]) -> None:
        ...
    


class Query:
    """Execute a Polar query through the FFI/event interface."""
    def __init__(self, ffi_query, *, host=..., bindings=...) -> None:
        ...
    
    def __del__(self) -> None:
        ...
    
    def bind(self, name, value): # -> None:
        """Bind `name` to `value` for the duration of the query."""
        ...
    
    def run(self) -> Generator[Dict[str, Any], None, None]:
        """Run the event loop and yield results."""
        ...
    
    def handle_make_external(self, data): # -> None:
        ...
    
    def handle_relation(self, instance, rel):
        ...
    
    def handle_external_call(self, data): # -> None:
        ...
    
    def handle_external_op(self, data): # -> None:
        ...
    
    def handle_external_isa(self, data): # -> None:
        ...
    
    def handle_external_isa_with_path(self, data): # -> None:
        ...
    
    def handle_external_is_subspecializer(self, data): # -> None:
        ...
    
    def handle_external_is_subclass(self, data): # -> None:
        ...
    
    def handle_next_external(self, data): # -> None:
        ...
    
    def handle_debug(self, data): # -> None:
        ...
    


